name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: stop-app-with-port-x86_64-unknown-linux-gnu.tar.gz
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: stop-app-with-port-x86_64-unknown-linux-musl.tar.gz
          - target: x86_64-apple-darwin
            os: macos-latest
            name: stop-app-with-port-x86_64-apple-darwin.tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            name: stop-app-with-port-aarch64-apple-darwin.tar.gz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: stop-app-with-port-x86_64-pc-windows-msvc.zip

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      - name: Install musl tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build Binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Build Archive
        shell: bash
        run: |
          binary_name="stop-app-with-port"
          dirname="$binary_name-${{ matrix.target }}"
          mkdir "$dirname"
          
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi
          
          cp README.md "$dirname"
          
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a "${{ matrix.name }}" "$dirname"
          else
            tar -czf "${{ matrix.name }}" "$dirname"
          fi

      - name: Upload Archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Get Release Info
        shell: bash
        run: |
          echo "RELEASE_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: artifacts/**/*